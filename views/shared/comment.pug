div.comment
  if !comment.is_deleted && !comment.is_removed && locals.currentUser
    div.voting-arrows 
        button(onclick="upvoteComment('"+comment._id +"',this)" class=(comment.user_vote === 1 ? 'upvote' : '')) ^
        button(onclick="downvoteComment('"+comment._id +"',this)" class=(comment.user_vote === -1 ? 'downvote' : '')) v
  div.comment-body
    if !comment.is_removed
      p= (comment.is_deleted ? 'Deleted' : comment.text)
      p= (comment.is_deleted ? 'Deleted' : comment.submitter.username)
      p= comment._id
    else
      if is_moderator
        h2 REMOVED
        p= (comment.is_deleted ? 'Deleted' : comment.text)
        p= (comment.is_deleted ? 'Deleted' : comment.submitter.username)
        p= comment._id
        -let clickAction = "removeCommentToggle('"+post.subreddit.name+"', '"+comment._id+"', this)"
        -let actionName = 'Reinstate Comment'
        include action_confirmation.pug
      else
        p Deleted
        p Deleted
    if locals.currentUser
      if !comment.is_deleted && !comment.is_removed
        if String(locals.currentUser._id) === String(comment.submitter._id)
          -let clickAction = "deleteComment('"+  comment._id + "',this)"
          -let actionName = 'Delete'
          include action_confirmation.pug

        if is_moderator
          -let clickAction = "removeCommentToggle('"+post.subreddit.name+"', '"+comment._id+"', this)"
          -let actionName = 'Remove'
          include action_confirmation.pug
        form(method='POST')
          div.form-group
            textarea#text.form-control(type='text' name='text' required='true')
            input(type='hidden' name='parentCommentID' value=comment._id)
          button.btn.btn-primary(type='submit') Submit 